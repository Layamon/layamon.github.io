---
layout: post
title: pgwatch2与PostgreSQL监控指标
date: 2018-06-01 09:12
header-img: "img/head.jpg"
categories: jekyll update
tags:
   - PostgreSQL
---

# pgwatch2简介

+ 创建一个config数据库PostgreSQL，里面配置好要监控的库的信息，以及查询的时候执行的命令；

+ 创建一个influxdb，用来收集的监控信息

+ pgwatch2.go 读取config库中的信息，从相应的monitor_db中获取信息，存储在influxdb中

+ 装一个grafana，配置好DataSource，然后创建自己的dashboard，或者导入现成的json模板文件

  ```
  -[ RECORD 1 ]-------+------------------------------------------------
  id                  | 2
  org_id              | 1
  version             | 1
  type                | influxdb
  name                | Influx
  access              | proxy
  url                 | http://10.9.58.95:8086
  password            | root
  user                | root
  database            | pgwatch2
  basic_auth          | f
  basic_auth_user     |
  basic_auth_password |
  is_default          | t
  json_data           | {"keepCookies":[]}
  created             | 2018-05-23 12:45:24.165326
  updated             | 2018-05-23 14:18:26
  with_credentials    | f
  secure_json_data    |
  read_only           | f
  ```

  ​

# Metrics

+ backends：
  + backends状态统计：active,idle,idleintracaction,waiting
  + backends_workers 数量统计：
  + 最长的 query sesssion transaction


+ bgwriter
  + write和sync两个阶段的时间
  + pg_stat_bgwriter中国女的其他检查点统计信息


+ cpu_load
  + CPU 负载


+ db_stats
  + 磁盘读取写入速度
  + buffer命中率
  + 统计数：死锁，临时文件，冲突(热备与query的冲突)
  + db大小 年龄
  + tuple 统计 insert delete….
  + 事务提交和回滚数


+ index_stats
  + index统计：pg_stat_user_indexes


+ locks
  + 按照类型（relation, extend, page, tuple, transactionid, virtualxid, object, userlock, advisory）统计数量


+ pgbouncer_stats
  + show stats


+ 函数

  + Function次数与时间，可以算出每段时间里，函数的平均执行时间；pg_stat_function
+ stat_statements
  + query的次数和时间，算出平均调用次数，和平均调用时间
  + query统计：读写时间
  + query统计：shared buffer读写次数和命中数
  + query统计：tempfile读写次数


+ 膨胀统计
  + 表的膨胀百分比和膨胀空间
  + index的膨胀百分比和膨胀空间（pgwatch中没有）


+ 表IO统计
  + pg_statio_user_tables


+ 表的统计信息
  + pg_stat_user_tables


+ wal
  + xlog_location_b ,当前的位置，可以统计出wal的写入速度


+ 磁盘空间，其实上面有个db_stat.size_b，但是磁盘空间还是需要的，怕有一些除了db之外的东西
+ sequence
  + 设定一个阈值，监控到达这个阈值的Sequence
+ TOP N
  + 按照平均查询时间，查询次数和IO次数分别统计出的TOP N query
  + table
  + index
+ replication
  + 复制延迟
